require('dotenv').config();
const {
  Client,
  GatewayIntentBits,
  Events,
  ModalBuilder,
  TextInputBuilder,
  TextInputStyle,
  ActionRowBuilder,
  ButtonBuilder,
  ButtonStyle,
  EmbedBuilder,
  PermissionsBitField,
} = require('discord.js');

const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
  ],
});

const FORM_CHANNEL_ID = process.env.FORM_CHANNEL_ID;        // ‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ß‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°
const ANNOUNCE_CHANNEL_ID = process.env.ANNOUNCE_CHANNEL_ID; // ‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏•‡∏≤

// ===== Helper: ‡∏™‡πà‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡πâ‡∏≠‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏° =====
async function sendFormButton() {
  const channel = await client.channels.fetch(FORM_CHANNEL_ID);
  if (!channel) throw new Error('FORM_CHANNEL_ID ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡πà‡∏≠‡∏á');

  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥
  const perms = channel.permissionsFor(client.user);
  if (!perms?.has(PermissionsBitField.Flags.SendMessages)) {
    throw new Error('‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå SendMessages ‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°');
  }

  const button = new ButtonBuilder()
    .setCustomId('open_leave_form')
    .setLabel('üìã ‡∏Å‡∏£‡∏≠‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏•‡∏≤')
    .setStyle(ButtonStyle.Primary);

  const row = new ActionRowBuilder().addComponents(button);

  await channel.send({
    content: '‡∏Å‡∏£‡∏≠‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏•‡∏≤‡πÅ‡∏Å‡πä‡∏á',
    components: [row],
  });
}

// ====== Ready ======
client.once(Events.ClientReady, async () => {
  console.log(`‚úÖ ‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå: ${client.user.tag}`);
  try {
    await sendFormButton();
  } catch (err) {
    console.error('‚ùå ‡∏™‡πà‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', err);
  }
});

// ====== ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° ‚Üí ‡πÄ‡∏õ‡∏¥‡∏î Modal ======
client.on(Events.InteractionCreate, async (interaction) => {
  if (!interaction.isButton()) return;
  if (interaction.customId !== 'open_leave_form') return;

  try {
    const modal = new ModalBuilder()
      .setCustomId('submit_leave_form')
      .setTitle('üìù ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏•‡∏≤‡πÅ‡∏Å‡πä‡∏á');

    const nameInput = new TextInputBuilder()
      .setCustomId('name')
      .setLabel('‡∏ä‡∏∑‡πà‡∏≠')
      .setStyle(TextInputStyle.Short)
      .setRequired(true);

    const dateInput = new TextInputBuilder()
      .setCustomId('date')
      .setLabel('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏≤ (‡πÄ‡∏ä‡πà‡∏ô 09/08, 09-10/08')
      .setStyle(TextInputStyle.Short)
      .setRequired(true);

    const reasonInput = new TextInputBuilder()
      .setCustomId('reason')
      .setLabel('‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏•‡∏≤')
      .setStyle(TextInputStyle.Paragraph)
      .setRequired(true);

    const rows = [
      new ActionRowBuilder().addComponents(nameInput),
      new ActionRowBuilder().addComponents(dateInput),
      new ActionRowBuilder().addComponents(reasonInput),
    ];

    await interaction.showModal(modal.addComponents(...rows));
  } catch (err) {
    console.error('‚ùå ‡πÅ‡∏™‡∏î‡∏á Modal ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', err);
    if (!interaction.replied) {
      await interaction.reply({ content: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°', ephemeral: true });
    }
  }
});

// ====== Submit Modal ‚Üí ‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÑ‡∏õ‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏® ======
client.on(Events.InteractionCreate, async (interaction) => {
  if (!interaction.isModalSubmit()) return;
  if (interaction.customId !== 'submit_leave_form') return;

  const name = interaction.fields.getTextInputValue('name') || '-';
  const dateRange = interaction.fields.getTextInputValue('date') || '-';
  const reason = interaction.fields.getTextInputValue('reason') || '-';

  try {
    const channel = await client.channels.fetch(ANNOUNCE_CHANNEL_ID);
    if (!channel) throw new Error('ANNOUNCE_CHANNEL_ID ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡πà‡∏≠‡∏á');

    const perms = channel.permissionsFor(client.user);
    if (!perms?.has(PermissionsBitField.Flags.SendMessages)) {
      throw new Error('‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå SendMessages ‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®');
    }

    // ‡πÉ‡∏ä‡πâ Embed ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô ‚Äú‡∏Å‡∏≤‡∏£‡πå‡∏î‚Äù
    const embed = new EmbedBuilder()
      .setColor(0x5865f2)
      .setTitle('üì¢ ‡∏°‡∏µ‡∏Ñ‡∏ô‡πÅ‡∏à‡πâ‡∏á‡∏•‡∏≤‡πÅ‡∏•‡πâ‡∏ß!')
      .addFields(
        { name: 'üë§ ‡∏ä‡∏∑‡πà‡∏≠', value: name, inline: false },
        { name: 'üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏≤', value: dateRange, inline: false },
        { name: 'üìù ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•', value: reason, inline: false },
      )
      .setFooter({ text: '‡∏£‡∏∞‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏•‡∏≤‡πÅ‡∏Å‡πä‡∏á ‚ú®' })
      .setTimestamp();

    // ‡πÅ‡∏ô‡∏ö mention ‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á (optional)
    const content = `‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á: <@${interaction.user.id}>`;

    // ‡∏ñ‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï EmbedLinks ‡∏à‡∏∞ fallback ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤
    if (!perms.has(PermissionsBitField.Flags.EmbedLinks)) {
      await channel.send(`üì¢ **${name}** ‡πÅ‡∏à‡πâ‡∏á‡∏•‡∏≤\n${dateRange}\n${reason}\n${content}`);
    } else {
      await channel.send({ content, embeds: [embed] });
    }

    await interaction.reply({ content: '‚úÖ ‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏•‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!', ephemeral: true });
  } catch (err) {
    console.error('‚ùå ‡∏™‡πà‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', err);
    const msg = err?.message?.includes('Missing Permissions')
      ? '‚ùå ‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°/Embed ‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®'
      : '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®';
    if (!interaction.replied) {
      await interaction.reply({ content: msg, ephemeral: true });
    }
  }
});

// ====== Error safety (‡∏Å‡∏±‡∏ô process ‡∏•‡πâ‡∏°) ======
process.on('unhandledRejection', (reason) => {
  console.error('Unhandled Rejection:', reason);
});
process.on('uncaughtException', (err) => {
  console.error('Uncaught Exception:', err);
});

client.login(process.env.DISCORD_TOKEN);
